% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny.R
\name{sui_shinymod_ui}
\alias{sui_shinymod_ui}
\alias{sui_shinymod_server}
\title{A Shiny module for internationalization}
\usage{
sui_shinymod_ui(id)

sui_shinymod_server(input, output, session, csv_path = NULL, to = NULL)
}
\arguments{
\item{id}{string: the id of the shiny element}

\item{input}{: see \code{\link[shiny]{callModule}}}

\item{output}{: see \code{\link[shiny]{callModule}}}

\item{session}{: see \code{\link[shiny]{callModule}}}

\item{csv_path}{string: as for \code{\link{sui_translator}}}

\item{to}{string: as for \code{link{sui_translator}}}
}
\description{
A Shiny module for internationalization
}
\examples{
\dontrun{
  library(shiny)
  app <- shinyApp(
      ui = fluidPage(
          useShinyjs(), ## need to include this call
          sui_js(),
          sui_shinymod_ui(id = "lang"),
          tags$p(lang_key = "hello"), ## simple tags can be done like this
          uiOutput("another")
      ),
      server = function(input, output) {
          ms <- callModule(sui_shinymod_server, id = "lang")
          ## more complex UI elements can be done like this
          output$another <- renderUI({
              ms$i18n_lang()
              tags$p(ms$i18n$t("Please wait"))
          })
      }
  )
  runApp(app)
}
}
